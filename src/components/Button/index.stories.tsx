import { Meta, StoryFn } from "@storybook/html";
import { Button, ButtonProps } from ".";

export default {
  /* üëá The title prop is optional.
   * See https://storybook.js.org/docs/html/configure/overview#configure-story-loading
   * to learn how to generate automatic titles
   */
  title: "UI/Button",
  argTypes: {
    variant: {
      name: "variant",
      type: "string",
      description: "–í–∞—Ä–∏–∞–Ω—Ç—ã –∫–Ω–æ–ø–∫–∏",
      defaultValue: "filled",
      control: {
        type: "select",
        options: ["filled", "outlined", "text", "elevated", "tonal"],
      },
    },
    loading: {
      name: "loading",
      type: "boolean",
      description: "–°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏?",
      defaultValue: false,
    },
    center: {
      name: "center",
      type: "boolean",
      description: "–ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ü–µ–Ω—Ç—Ä—É?",
      defaultValue: false,
    },
    disabled: {
      name: "disabled",
      type: "boolean",
      description: "–í—ã–∫–ª—é—á–µ–Ω–∞?",
      defaultValue: false,
    },
    leftIcon: {
      name: "leftIcon",
      description: "–ò–∫–æ–Ω–∫–∞ —Å–ª–µ–≤–∞",
    },
    rightIcon: {
      name: "rightIcon",
      description: "–ò–∫–æ–Ω–∫–∞ —Å–ø—Ä–∞–≤–∞",
    },
    as: {
      name: "as",
      type: "string",
      description: "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–µ–¥–µ—Ä–∏–Ω–≥–∞",
      defaultValue: "button",
    },
    children: {
      name: "children",
      type: "string",
      description: "–î–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç",
    },
    w: {
      name: "w",
      type: "number",
      description: "–®–∏—Ä–∏–Ω–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    h: {
      name: "h",
      type: "number",
      description: "–í—ã—Å–æ—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    m: {
      name: "m",
      type: "number",
      description: "–í–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mx: {
      name: "mx",
      type: "number",
      description: "–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    my: {
      name: "my",
      type: "number",
      description: "–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mt: {
      name: "mt",
      type: "number",
      description: "–í–µ—Ä—Ö–Ω–∏–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mr: {
      name: "mr",
      type: "number",
      description: "–ü—Ä–∞–≤—ã–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mb: {
      name: "mb",
      type: "number",
      description: "–ù–∏–∂–Ω–∏–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    ml: {
      name: "ml",
      type: "number",
      description: "–õ–µ–≤—ã–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    p: {
      name: "p",
      type: "number",
      description: "–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    px: {
      name: "px",
      type: "number",
      description: "–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    py: {
      name: "py",
      type: "number",
      description: "–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    pt: {
      name: "pt",
      type: "number",
      description: "–í–µ—Ä—Ö–Ω–∏–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    pr: {
      name: "pr",
      type: "number",
      description: "–ü—Ä–∞–≤—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    pb: {
      name: "pb",
      type: "number",
      description: "–ù–∏–∂–Ω–∏–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    pl: {
      name: "pl",
      type: "number",
      description: "–õ–µ–≤—ã–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
  },
} as Meta<ButtonProps>;

const Template = ((args: ButtonProps) => (
  <Button {...args} />
)) as StoryFn<ButtonProps>;

export const Default = Template.bind({});
Default.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
} as ButtonProps;

const Icon = () => (
  <svg
    width="18"
    height="18"
    viewBox="0 0 18 18"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M15 9.75H9.75V15H8.25V9.75H3V8.25H8.25V3H9.75V8.25H15V9.75Z"
      fill="currentColor"
    />
  </svg>
);

export const LeftIcon = Template.bind({});
LeftIcon.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
  leftIcon: <Icon />,
} as ButtonProps;

export const RightIcon = Template.bind({});
RightIcon.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
  rightIcon: <Icon />,
} as ButtonProps;

export const BothIcons = Template.bind({});
BothIcons.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
  leftIcon: <Icon />,
  rightIcon: <Icon />,
} as ButtonProps;
