import { Meta, StoryFn } from "@storybook/html";
import { Button, ButtonProps } from ".";
import { IconChevronRight } from "../Icon/iconChevronRight";
import { IconCircle } from "../Icon/iconCircle";

export default {
  /* üëá The title prop is optional.
   * See https://storybook.js.org/docs/html/configure/overview#configure-story-loading
   * to learn how to generate automatic titles
   */
  title: "UI/Buttons/Button",
  parameters: {
    docs: {
      description: {
        component:
          "–ö–Ω–æ–ø–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –ª—é–¥—è–º –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏—è, –æ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –¥–æ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –æ—Ç–º–µ—Ç–∫–∏ ¬´–ù—Ä–∞–≤–∏—Ç—Å—è¬ª –ø—É–±–ª–∏–∫–∞—Ü–∏–∏.<br/><br/>[–°—Å—ã–ª–∫–∞ –Ω–∞ Material You](https://m3.material.io/components/buttons/overview)",
      },
    },
  },
  argTypes: {
    variant: {
      name: "variant",
      type: "string",
      description: "–í–∞—Ä–∏–∞–Ω—Ç",
      defaultValue: "filled",
      control: {
        type: "select",
        options: ["elevated", "filled", "tonal", "outlined", "text"],
      },
    },
    color: {
      name: "color",
      type: "string",
      description: "–¶–≤–µ—Ç",
      defaultValue: "primary",
      control: {
        type: "select",
        options: [
          "primary",
          "secondary",
          "tertiary",
          "success",
          "warning",
          "error",
        ],
      },
    },
    loading: {
      name: "loading",
      type: "boolean",
      description: "–°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏?",
      defaultValue: false,
    },
    disabled: {
      name: "disabled",
      type: "boolean",
      description: "–í—ã–∫–ª—é—á–µ–Ω?",
      defaultValue: false,
    },
    as: {
      name: "as",
      type: "string",
      description: "–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–µ–Ω–µ–¥–µ—Ä–∏–Ω–≥–∞",
      defaultValue: "button",
    },
    children: {
      name: "children",
      type: "string",
      description: "–î–æ—á–µ—Ä–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç",
    },
    m: {
      name: "m",
      type: "number",
      description: "–í–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mx: {
      name: "mx",
      type: "number",
      description: "–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    my: {
      name: "my",
      type: "number",
      description: "–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–µ –≤–Ω–µ—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mt: {
      name: "mt",
      type: "number",
      description: "–í–µ—Ä—Ö–Ω–∏–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mr: {
      name: "mr",
      type: "number",
      description: "–ü—Ä–∞–≤—ã–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    mb: {
      name: "mb",
      type: "number",
      description: "–ù–∏–∂–Ω–∏–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
    ml: {
      name: "ml",
      type: "number",
      description: "–õ–µ–≤—ã–π –≤–Ω–µ—à–Ω–∏–π –æ—Ç—Å—Ç—É–ø –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –ø–∏–∫—Å–µ–ª—è—Ö",
    },
  },
} as Meta<ButtonProps>;

const Template = ((args: ButtonProps) => (
  <Button {...args} />
)) as StoryFn<ButtonProps>;

export const Default = Template.bind({});
Default.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
} as ButtonProps;

export const LeftIcon = Template.bind({});
LeftIcon.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
  leftIcon: <IconCircle />,
} as ButtonProps;

export const RightIcon = Template.bind({});
RightIcon.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
  rightIcon: <IconChevronRight />,
} as ButtonProps;

export const BothIcons = Template.bind({});
BothIcons.args = {
  children: "–ö–Ω–æ–ø–∫–∞",
  leftIcon: <IconCircle />,
  rightIcon: <IconChevronRight />,
} as ButtonProps;
